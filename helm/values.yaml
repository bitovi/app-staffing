# Default values for app-staffing
appname: app-staffing
replicas: 1

imagePullPolicy: Always
updateStrategy: RollingUpdate
revisionHistoryLimit: 2
# imagePullSecrets:
#   - docker-registry

image: app-staffing:latest

cacheBusting:
  # if `true`, chart gets redeployed every time
  timestamp: false

# For the front-end config
# Note: Please see /public/config.js for information about these values.
apiBaseURL: http://app-staffing-api.localhost
# configVolumes:
# - name: config
#   configMap:
#     name: app-staffing-config
# configVolumeMounts:
# - name: config
#   # for production build
#   mountPath: /usr/share/nginx/html/config.js
#   # # for development build
#   # mountPath: /usr/src/app/public/config.js
#   subPath: config.js

service:
  port: 80
  targetPort: 80
  type: ClusterIP
  annotations: {}

ingress: []
  # - class: nginx
  #   name: app
  #   host: app.localhost
  #   tls: false
  #   extraAnnotations:
  #     kubernetes.io/ingress.class: nginx
  #   paths:
  #     - path: /
  #       pathType: Prefix
  #       service: app-staffing
  #       port: 80

# used with local development
#   enabled automatically when 
#   MOUNT_APP_STAFFING="1" is set on `_scripts/local/deploy.sh` from the ops repo
chokidarPollerContainer:
  enabled: false
  extraEnv:
    KUBE_PATH: "/usr/src/kube"
  # extraVolumes:
  #   - name: local-files-app-staffing
  #     hostPath: 
  #       path: /local-files/app-staffing
  # extraVolumeMounts:
  #   - mountPath: /usr/src/app
  #     name: local-files-app-staffing

cacheBusting:
  timestamp: false
  # TODO: implement the following to deploy chart only when relevant templates change
  # helmfiles: false

# the above requires something along the lines of the following:
# spec:
#   template:
#     metadata:
#       annotations:
#         {{- if .Values.cacheBusting.helmfiles }}
#         cachebusting-helmfiles/deployment: {{ include (print $.Template.BasePath "/deployment.yaml") . | sha256sum }}
#         cachebusting-helmfiles/service: {{ include (print $.Template.BasePath "/service.yaml") . | sha256sum }}
#         {{- end }}

extraEnv: {}
  # APP_PORT: 3000

prometheus:
  enabled: false

# extraVolumes:
#   - name: local-files-app-staffing
#     hostPath: 
#       path: /local-files/app-staffing
# extraVolumeMounts:
#   - mountPath: /usr/src/app
#     name: local-files-app-staffing

# TODO: implement serviceaccount.yaml
serviceAccount:
  enabled: false
  # set to true to include a role and role binding to allow sa to modify pods
  enableModifyPods: false
